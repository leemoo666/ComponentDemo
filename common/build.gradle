apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.apkVersionCode
        versionName rootProject.ext.apkVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.0.2'
    testImplementation 'junit:junit:4.12'
    api project(':imageloadermanager')

    //ARouter路由
    api 'com.alibaba:arouter-api:1.2.4'

    //butterKnife
    api 'com.jakewharton:butterknife:8.8.1'

    //dagger2
    api 'com.google.dagger:dagger:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    api 'com.google.dagger:dagger-android:2.16'
    api 'com.google.dagger:dagger-android-support:2.16' // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'

    //rxjava2
    api "io.reactivex.rxjava2:rxjava:2.1.8"
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //retrofit2
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

}
